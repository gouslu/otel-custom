# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: otel-custom
#   namespace: default
#   labels:
#     app: otel-custom
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: otel-custom
#   strategy:
#     rollingUpdate:
#       maxSurge: 1
#       maxUnavailable: 0
#   minReadySeconds: 5 
#   template:
#     metadata:
#       labels:
#         app: otel-custom
#     spec:
#       # serviceAccountName: otel-custom
#       containers:
#       - name: otel-custom
#         image: otel-custom:latest
#         ports:
#         - name: http
#           containerPort: 8080
#         - name: debug
#           containerPort: 40000
#         resources:
#           limits:
#             cpu: "1"
#             memory: 1Gi
#         imagePullPolicy: Never


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector-config
  namespace: default
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
      custom:
        port: 8080
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otelcol'
            scrape_interval: 5s
            static_configs:
            - targets: ['0.0.0.0:8888']
            metric_relabel_configs:
              - source_labels: [ __name__ ]
                regex: '.*grpc_io.*'
                action: drop

    processors:
      custom:

    exporters:
      # prometheus:
      #   endpoint: ":9494"
      #   namespace: promMmetrics
      #   send_timestamps: true
      #   metric_expiration: 180m
      #   enable_open_metrics: true
      #   resource_to_telemetry_conversion:
      #     enabled: true
      logging:
        verbosity: detailed
      jaeger:
        endpoint: localhost:14250
        tls:
          insecure: true
      custom:
      # prometheusremotewrite:
      #   endpoint: "http://localhost:9009/api/v1/push"
      #   tls:
      #     insecure: true

    extensions:
      zpages:

    service:
      extensions: [zpages]
      pipelines:
        traces:
          receivers: [otlp, custom]
          processors: [custom]
          exporters: [logging, custom]
        metrics:
          receivers: [prometheus]
          processors: [custom]
          exporters: [logging]
      telemetry:
        logs:
          level: debug
          # output_paths:
            # - C:/Users/gouslu/go/src/github.com/gouslu/otel-custom/otel-custom.log
        metrics:
          address: ":8888"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-custom
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-custom
  template:
    metadata:
      labels:
        app.kubernetes.io/name: otel-custom
    spec:
      serviceAccountName: otel-custom
      containers:
      - name: otelcol
        # args:
        # - --config=/conf/config.yaml
        image: otel-custom:latest
        volumeMounts:
        - mountPath: /conf
          name: collector-config
        resources:
          limits:
            cpu: 200m
            memory: 400Mi
        imagePullPolicy: Never
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: collector-config
        name: collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: otel-custom
  namespace: default
spec:
  ports:
  - name: grpc-otlp
    port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    app.kubernetes.io/name: otel-custom
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-custom
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-custom
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-custom
  namespace: default
subjects:
- kind: ServiceAccount
  name: otel-custom
  namespace: default
roleRef:
  kind: ClusterRole
  name: otel-custom
  apiGroup: rbac.authorization.k8s.io
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: prometheus
# spec:
#   ports:
#     - name: prometheus-exporter
#       port: 9494
#       protocol: TCP
#       targetPort: 9494
#   selector:
#     app.kubernetes.io/name: otel-custom
#   type: ClusterIP
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: otel-custom
#   namespace: default
# rules:
# - apiGroups: [""]
#   resources: ["pods", "namespaces"]
#   verbs: ["get", "watch", "list"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: otel-custom
#   namespace: default
# subjects:
# - kind: ServiceAccount
#   name: otel-custom
#   namespace: default
# roleRef:
#   kind: Role
#   name: otel-custom
#   apiGroup: rbac.authorization.k8s.io
